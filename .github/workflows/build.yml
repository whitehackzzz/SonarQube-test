name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          check-latest: true

      - name: Check if SonarQube scanner is installed
        id: check_sonar_scanner
        run: |
          if ! command -v sonar-scanner &> /dev/null; then
            echo "SonarQube scanner not found"
            echo "not_installed=true" >> $GITHUB_ENV
          else
            echo "SonarQube scanner is already installed"
            echo "not_installed=false" >> $GITHUB_ENV
          fi

      - name: Download and set up SonarQube scanner if not installed
        if: env.not_installed == 'true'
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux-x64.zip
          unzip sonar-scanner-cli-6.2.1.4610-linux-x64.zip
          mv sonar-scanner-* sonar-scanner
          sudo mv sonar-scanner /usr/local/bin/
          echo 'export PATH=$PATH:/usr/local/bin/sonar-scanner/bin' >> $GITHUB_ENV

      - name: Verify SonarQube scanner installation
        run: sonar-scanner --version

      - name: Run SonarQube scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
      # Uncomment the following lines if you want to fail the job when the Quality Gate is red
      # - name: Quality Gate check
      #   uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
