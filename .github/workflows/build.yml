name: SonarQube Build and Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_scan:
    runs-on: windows-latest # Modify this to 'ubuntu-latest' or your preferred OS

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Verify Java version
      run: |
        java -version
        echo "JAVA_HOME is set to $JAVA_HOME"

    - name: Check if pom.xml exists
      run: |
        echo "Checking if pom.xml exists..."
        if [ ! -f "pom.xml" ]; then
          echo "pom.xml not found! Exiting..."
          exit 1
        fi

    - name: Run Maven clean install
      run: |
        echo "Running 'mvn clean install'..."
        mvn clean install
      continue-on-error: true

    - name: Troubleshoot Maven Build if Failed
      if: failure() # This step runs only if the previous Maven step failed
      run: |
        echo "Maven build failed. Running with debug logs..."
        mvn clean install -X
        exit 1

    - name: Verify target/classes directory exists
      run: |
        echo "Checking if target/classes exists..."
        if [ ! -d "target/classes" ]; then
          echo "target/classes not found. Ensuring it exists..."
          mkdir -p target/classes
          mvn compile
        fi

    - name: Run SonarQube Scan
      run: |
        echo "Running SonarQube Scanner..."
        sonar-scanner
      continue-on-error: true

    - name: Troubleshoot SonarQube if Failed
      if: failure() # This step runs only if the previous SonarQube step failed
      run: |
        echo "SonarQube scan failed. Check the logs for issues."
        exit 1
